"use strict";
var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = void 0;
  var _react = require("react");
  var _Pet = _interopRequireDefault(require("./Pet"));
  var _reactPaginate = _interopRequireDefault(require("react-paginate"));
  var _jsxRuntime = require("react/jsx-runtime");
  var _s = $RefreshSig$();
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }
  function Results({pets, data, pageProp}) {
    _s();
    const [pageNumber, setPageNumber] = (0, _react.useState)(0);
    const [pageCount, setPageCount] = (0, _react.useState)(Math.ceil(data.meta.total_count / data.meta.limit));
    return (
      /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "search",
        children: [!pets.length ? /*#__PURE__*/(0, _jsxRuntime.jsx)("h2", {
          children: "No Pets Found"
        }) : pets.map(pet => /*#__PURE__*/(0, _jsxRuntime.jsx)(_Pet.default, {
          animal: pet.animal,
          name: pet.name,
          breed: pet.breed,
          images: pet.images,
          location: `${pet.city}, ${pet.state}`,
          id: pet.id
        }, pet.id)), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactPaginate.default, {
          previousLabel: 'previous',
          nextLabel: 'next',
          breakLabel: '...',
          breakClassName: 'break-me',
          pageCount: PageCount,
          marginPagesDisplayed: 2,
          pageRangeDisplayed: 5,
          onPageChange: this.handlePageClick,
          containerClassName: 'pagination',
          activeClassName: 'active'
        })]
      })
    );
  }
  _s(Results, "jdC2RlNdQ/TpTvpEeGfy8s1nX6E=");
  _c = Results;
  var _default = Results;
  exports.default = _default;
  var _c;
  $RefreshReg$(_c, "Results");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
