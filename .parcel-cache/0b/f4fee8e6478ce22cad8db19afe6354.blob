"use strict";
var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = void 0;
  var _react = require("react");
  var _axios = _interopRequireDefault(require("axios"));
  var _reactPaginate = _interopRequireDefault(require("react-paginate"));
  var _ThemeContext = _interopRequireDefault(require("./ThemeContext"));
  var _useBreedList = _interopRequireDefault(require("./useBreedList"));
  var _Pet = _interopRequireDefault(require("./Pet"));
  var _Results = _interopRequireDefault(require("./Results"));
  var _jsxRuntime = require("react/jsx-runtime");
  var _s = $RefreshSig$();
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }
  const ANIMALS = ["cat", "dog", "reptile", "bird", "rabbit"];
  const SearchParams = pet => {
    _s();
    const [location, setLocation] = (0, _react.useState)("");
    const [animal, setAnimal] = (0, _react.useState)("");
    const [breed, setBreed] = (0, _react.useState)("");
    const [petsData, setPets] = (0, _react.useState)([]);
    const [breedList] = (0, _useBreedList.default)(animal);
    const [theme, setTheme] = (0, _react.useContext)(_ThemeContext.default);
    const [pagesVisited, setPagesVisited] = (0, _react.useState)(0);
    const [data, setData] = (0, _react.useState)([]);
    const [perPage] = (0, _react.useState)(10);
    const [pageCount, setPageCount] = (0, _react.useState)(0);
    (0, _react.useEffect)(() => {
      requestPets();
    }, [pagesVisited]);
    // eslint-disable-line react-hooks/exhaustive-deps
    async function requestPets() {
      const res = await fetch(`https://pets-v2.dev-apis.com/pets?animal=${animal}&location=${location}&breed=${breed}`);
      const json = await res.json();
      console.log(json);
      setPets(json.pets);
      const resX = await _axios.default.get(`http://pets-v2.dev-apis.com/pets?animal=${animal}&page=${pageCount}`);
      const data = resX.data.pets;
      console.log(data);
      const grabbedPets = data.slice(pagesVisited, pagesVisited + perPage);
      const postData = !grabbedPets.length ? /*#__PURE__*/(0, _jsxRuntime.jsx)("h2", {
        children: "No Pets Found"
      }) : grabbedPets.map(pet => /*#__PURE__*/
      // <Results
      // key={pet.id}
      // pets={pet.petsData}
      // />
      (0, _jsxRuntime.jsx)(_Pet.default, {
        animal: pet.animal,
        name: pet.name,
        breed: pet.breed,
        images: pet.images,
        location: `${pet.city}, ${pet.state}`,
        id: pet.id
      }, pet.id));
      // <Results pets={petsData} />
      setData(postData);
      setPageCount(Math.ceil(data.length / perPage));
    }
    // useEffect(() => {
    // getData()
    // }, [pagesVisited]); // eslint-disable-line react-hooks/exhaustive-deps
    // const getData = async() => {
    // const res = await axios.get(`http://pets-v2.dev-apis.com/pets?animal=${animal}&page=${pageCount}`)
    // const data = res.data.pets;
    // console.log(data)
    // const grabbedPets = data.slice(pagesVisited, pagesVisited + perPage);
    // const postData =
    // !grabbedPets.length ? (
    // <h2>No Pets Found</h2>
    // ) : (
    // grabbedPets.map((pet) => (
    // <Pet
    // animal={pet.animal}
    // key={pet.id}
    // name={pet.name}
    // breed={pet.breed}
    // images={pet.images}
    // location={`${pet.city}, ${pet.state}`}
    // id={pet.id}
    // />
    // ))
    // )
    // // <Results pets={petsData} />
    // setData(postData)
    // setPageCount(Math.ceil(data.length / perPage))
    // }
    const handlePageClick = e => {
      const selectedPage = e.selected;
      setPagesVisited(selectedPage + 1);
    };
    return (
      /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "search-params",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("form", {
          onSubmit: e => {
            e.preventDefault();
            requestPets();
          },
          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
            htmlFor: "location",
            children: ["Location", /*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
              id: "location",
              onChange: e => setLocation(e.target.value),
              value: location,
              placeholder: "Location"
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
            htmlFor: "animal",
            children: ["Animal", /*#__PURE__*/(0, _jsxRuntime.jsxs)("select", {
              id: "animal",
              value: animal,
              onChange: e => setAnimal(e.target.value),
              onBlur: e => setAnimal(e.target.value),
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                value: ""
              }), ANIMALS.map(animal => /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                value: animal,
                children: animal
              }, animal))]
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
            htmlFor: "breed",
            children: ["Breeds", /*#__PURE__*/(0, _jsxRuntime.jsxs)("select", {
              id: "breed",
              value: breed,
              onChange: e => setBreed(e.target.value),
              onBlur: e => setBreed(e.target.value),
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                value: ""
              }), breedList.map(breed => /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                value: breed,
                children: breed
              }, breed))]
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
            htmlFor: "theme",
            children: ["ThemeContext", /*#__PURE__*/(0, _jsxRuntime.jsxs)("select", {
              value: theme,
              onChange: e => setTheme(e.target.value),
              onBlur: e => setTheme(e.target.value),
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                value: "darkblue",
                children: "Dark Blue"
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                value: "peru",
                children: "Peru"
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                value: "mediumorchid",
                children: "Medium Orchid"
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                value: "chartreuse",
                children: "Chartreuse"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
            style: {
              backgroundColor: theme
            },
            children: "Submit"
          })]
        }), data, /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactPaginate.default, {
          previousLabel: "prev",
          nextLabel: "next",
          breakLabel: "...",
          breakClassName: "break-me",
          pageCount: pageCount,
          marginPagesDisplayed: 2,
          pageRangeDisplayed: 5,
          onPageChange: handlePageClick,
          containerClassName: "pagination",
          subContainerClassName: "pages pagination",
          activeClassName: "active"
        })]
      })
    );
  };
  _s(SearchParams, "gwretIL6omrL1Bukuj+uXz8YUmE=", false, function () {
    return [_useBreedList.default];
  });
  _c = SearchParams;
  var _default = SearchParams;
  exports.default = _default;
  var _c;
  $RefreshReg$(_c, "SearchParams");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
