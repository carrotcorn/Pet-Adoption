"use strict";
var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = void 0;
  var _react = require("react");
  var _reactRouterDom = require("react-router-dom");
  var _ThemeContext = _interopRequireDefault(require("./ThemeContext"));
  var _useBreedList = _interopRequireDefault(require("./useBreedList"));
  var _Results = _interopRequireDefault(require("./Results"));
  var _Pagination = _interopRequireDefault(require("./Pagination"));
  var _jsxRuntime = require("react/jsx-runtime");
  var _s = $RefreshSig$();
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }
  const ANIMALS = ["cat", "dog", "reptile", "bird", "rabbit"];
  const Pet = ({name, animal, breed, images, location, id}) => {
    let hero = "http://pets-images.dev-apis.com/pets/none.jpg";
    if (images.length) {
      hero = images[0];
    }
    return (
      /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactRouterDom.Link, {
        to: `/details/${id}`,
        className: "pet",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          className: "image-container",
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)("img", {
            src: hero,
            alt: name
          })
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "info",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h1", {
            children: name
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("h2", {
            children: [" ", `${animal} - ${breed} - ${location}`, " "]
          })]
        })]
      })
    );
  };
  _c = Pet;
  const SearchParams = () => {
    _s();
    const [location, setLocation] = (0, _react.useState)("");
    const [animal, setAnimal] = (0, _react.useState)("");
    const [breed, setBreed] = (0, _react.useState)("");
    const [pets, setPets] = (0, _react.useState)([]);
    const [breedList] = (0, _useBreedList.default)(animal);
    const [theme, setTheme] = (0, _react.useContext)(_ThemeContext.default);
    (0, _react.useEffect)(() => {
      requestPets();
    }, []);
    // eslint-disable-line react-hooks/exhaustive-deps
    async function requestPets() {
      const res = await fetch(`https://pets-v2.dev-apis.com/pets?animal=${animal}&location=${location}&breed=${breed}`);
      const json = await res.json();
      console.log(json);
      setPets(json.pets);
    }
    return (
      /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "search-params",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("form", {
          onSubmit: e => {
            e.preventDefault();
            requestPets();
          },
          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
            htmlFor: "location",
            children: ["Location", /*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
              id: "location",
              onChange: e => setLocation(e.target.value),
              value: location,
              placeholder: "Location"
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
            htmlFor: "animal",
            children: ["Animal", /*#__PURE__*/(0, _jsxRuntime.jsxs)("select", {
              id: "animal",
              value: animal,
              onChange: e => setAnimal(e.target.value),
              onBlur: e => setAnimal(e.target.value),
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                value: ""
              }), ANIMALS.map(animal => /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                value: animal,
                children: animal
              }, animal))]
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
            htmlFor: "breed",
            children: ["Breeds", /*#__PURE__*/(0, _jsxRuntime.jsxs)("select", {
              id: "breed",
              value: breed,
              onChange: e => setBreed(e.target.value),
              onBlur: e => setBreed(e.target.value),
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                value: ""
              }), breedList.map(breed => /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                value: breed,
                children: breed
              }, breed))]
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
            htmlFor: "theme",
            children: ["ThemeContext", /*#__PURE__*/(0, _jsxRuntime.jsxs)("select", {
              value: theme,
              onChange: e => setTheme(e.target.value),
              onBlur: e => setTheme(e.target.value),
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                value: "darkblue",
                children: "Dark Blue"
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                value: "peru",
                children: "Peru"
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                value: "mediumorchid",
                children: "Medium Orchid"
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                value: "chartreuse",
                children: "Chartreuse"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
            style: {
              backgroundColor: theme
            },
            children: "Submit"
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_Results.default, {
          pets: pets
        }), pets.length > 0 ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_Pagination.default, {
          data: pets,
          RenderComponent: Pet,
          title: "Posts",
          pageLimit: 5,
          dataLimit: 10
        }) : /*#__PURE__*/(0, _jsxRuntime.jsx)("h1", {
          children: " Data is missing!"
        })]
      })
    );
  };
  _s(SearchParams, "ek2Oxb56M+H8VKd6WLqpmAFjQ7k=", false, function () {
    return [_useBreedList.default];
  });
  _c2 = SearchParams;
  var _default = SearchParams;
  exports.default = _default;
  var _c, _c2;
  $RefreshReg$(_c, "Pet");
  $RefreshReg$(_c2, "SearchParams");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
