"use strict";
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _Pet = _interopRequireDefault(require("./Pet"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
// import { useEffect, useState } from 'react';
// import Pagination from './Pagination';
// import ReactPaginate from "react-paginate";
function Results({pets}) {
  // const [offset, setOffset] = useState(0);
  // const [data, setData] = useState([]);
  // const [perPage] = useState(10);
  // const [pageCount, setPageCount] = useState(0);
  // useEffect(() => {
  // getData()
  // }, [offset])
  // const getData = async() => {
  // const res = await axios.get(`http://pets-v2.dev-apis.com/pets?animal=${animal}&page=${pageCount}`)
  // const data = res.data;
  // const pets = data.slice(offset, offset + perPage);
  // setData(pets)
  // setPageCount(Math.ceil(data.length / perPage))
  // }
  // const handlePageClick = (e) => {
  // const selectedPage  = e.selected;
  // setOffset(selectedPage + 1)
  // }
  // const [petData, setPetData] = useState([]);
  // const [pageNumber, setPageNumber] = useState(0);
  // // const [pageCount] = useState(Math.ceil(data.meta.total_count / data.meta.limit))
  // // const [animal] = useState("")
  // const petsPerPage = 10;
  // const pagesVisited = pageNumber * petsPerPage;
  // const displayPets = petData
  // .slice(pagesVisited, pagesVisited + petsPerPage).map()
  // useEffect(() => {
  // paginatePets();
  // }, []); // eslint-disable-line react-hooks/exhaustive-deps
  // async function paginatePets() {
  // const res = await fetch(
  // `http://pets-v2.dev-apis.com/pets?animal=${animal}&page=${pageNumber}`
  // );
  // const json = await res.json();
  // console.log(json);
  // setPetData(json.pets);
  // }
  return (
    /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: "search",
      children: !pets.length ? /*#__PURE__*/(0, _jsxRuntime.jsx)("h2", {
        children: "No Pets Found"
      }) : pets.map(pet => /*#__PURE__*/(0, _jsxRuntime.jsx)(_Pet.default, {
        animal: pet.animal,
        name: pet.name,
        breed: pet.breed,
        images: pet.images,
        location: `${pet.city}, ${pet.state}`,
        id: pet.id
      }, pet.id))
    })
  );
}
_c = Results;
var _default = Results;
exports.default = _default;
var _c;
$RefreshReg$(_c, "Results");
